map_dfr(.x=thresholds, ~get_sens_spec(.x, x$score, x$srn, direction)) %>%
rbind(c(specificity = 0, sensitivity = 1))
}
ps_df %>%
tidyr::nest(data = -taxonomy)
library(microbiome)
library(microViz)
load("../imap-data-preparation/data/phyloseq_raw_rel_psextra_df_objects.rda", verbose = TRUE)
ps_df
library(purrr)
library(dplyr)
library(tidyr)
all_genera <- ps_df %>%
tidyr::nest(data = -taxonomy)
composite
all_genera <- ps_df %>%
tidyr::nest(data = -taxon) %>%
mutate(test = purrr::map(.x=data, ~wilcox.test(rel_abund~hyper, data=.x) %>% tidy)) %>%
tidyr::unnest(test) %>%
mutate(p.adjust = p.adjust(p.value, method="BH"))
all_genera <- ps_df %>%
tidyr::nest(data = -taxon)
all_genera
all_genera <- ps_df %>%
tidyr::nest(data = -taxon) %>%
mutate(test = purrr::map(.x=data, ~wilcox.test(rel_abund~hyper, data=.x) %>% tidy))
library(microbiome)
library(microViz)
load("../imap-data-preparation/data/phyloseq_raw_rel_psextra_df_objects.rda", verbose = TRUE)
ps_df
library(purrr)
library(dplyr)
library(tidyr)
all_genera <- ps_df %>%
tidyr::nest(data = -taxon) %>%
mutate(test = purrr::map(.x=data, ~wilcox.test(rel_abund~nationality, data=.x) %>% tidy))
library(purrr)
library(dplyr)
library(tidyr)
all_genera <- ps_df %>%
tidyr::nest(data = -taxon) %>%
mutate(test = purrr::map(.x=data, ~wilcox.test(rel_abund~sex, data=.x) %>% tidy))
composite
otutable
metabolites
taxonomy
otutable <- read_csv("data/HypertensionProject.csv", show_col_types = F) %>%
dplyr::select(1, Prevotella:ncol(.)) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
# dplyr::select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
otutable
otutable <- ps_df %>%
dplyr::select(sample_id, taxon, rel_abund)
otutable
otutable <- ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund)
otutable
otutable <- ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID")
otutable <- ps_df %>%
dplyr::select(SampleID, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID")
otutable <- ps_df %>%
dplyr::select(sample_id=SampleID, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID")
otutable <- ps_df %>%
dplyr::select(SampleID=sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID")
otutable
otutable <- ps_df %>%
dplyr::select(SampleID=sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
# dplyr::select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
otutable
ps_df
taxonomy
otutable
metadata <- read_csv("data/HypertensionProject.csv", show_col_types = F) %>%
dplyr::select(c(1:3)) %>%
mutate(hyper = Disease_State == "HTN" | Disease_State == "pHTN",
control = Disease_State == "healthy") %>%
rename(sample_id = SampleID)
metadata
ps_df
library(tidyverse, suppressPackageStartupMessages())
library(broom)
library(ggtext)
library(data.table)
# library(conflicted)
# conflict_prefer("transpose", "data.table", "purr")
set.seed(2022)
otutable <- read_csv("data/HypertensionProject.csv", show_col_types = F) %>%
dplyr::select(1, Prevotella:ncol(.)) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
# dplyr::select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
metabolites <- read_csv("data/HypertensionProjectMetabolites.csv", show_col_types = F) %>%
dplyr::select(c(1,5:18 )) %>%
data.table::transpose(keep.names = "metabopwy", make.names = "SampleID") %>%
# dplyr::select(metabopwy, starts_with("ERR")) %>%
pivot_longer(-metabopwy, names_to="sample_id", values_to="value") %>%
group_by(sample_id) %>%
mutate(rel_abund = value/sum(value)) %>%
ungroup() %>%
dplyr::select(-value) %>%
relocate(sample_id)
taxonomy <- read_tsv("data/mo_demodata/baxter.cons.taxonomy", show_col_types = F) %>%
rename_all(tolower) %>%
dplyr::select(otu, taxonomy) %>%
mutate(taxonomy = str_replace_all(taxonomy, "\\(\\d+\\)", ""),
taxonomy = str_replace(taxonomy, ";unclassified", "_unclassified"),
taxonomy = str_replace_all(taxonomy, ";unclassified", ""),
taxonomy = str_replace_all(taxonomy, ";$", ""),
taxonomy = str_replace_all(taxonomy, ".*;", "")
)
metadata <- read_csv("data/HypertensionProject.csv", show_col_types = F) %>%
dplyr::select(c(1:3)) %>%
mutate(hyper = Disease_State == "HTN" | Disease_State == "pHTN",
control = Disease_State == "healthy") %>%
rename(sample_id = SampleID)
## Data joining
composite <- inner_join(metadata, otutable, by="sample_id")
metabo_composite <- inner_join(metadata, metabolites, by="sample_id")
save(otutable, metabolites, taxonomy, metadata, composite, metabo_composite, file = "data/composite_object.rda")
ml_genus_dsestate <- composite %>%
select(sample_id, taxonomy, enttype = Enterotype, rel_abund, dsestate = Disease_State) %>%
pivot_wider(names_from=taxonomy, values_from = rel_abund) %>%
select(-sample_id) %>%
mutate(enttype = if_else(enttype == "Enterotype_1", "0", "1")) %>%
mutate(dsestate = if_else(dsestate == "pHTN" | dsestate == "HTN" , "0", "1")) %>%
select(-enttype) %>%
select(dsestate, everything())
ml_genus_dsestate
library(microbiome)
library(microViz)
load("../imap-data-preparation/data/phyloseq_raw_rel_psextra_df_objects.rda", verbose = TRUE)
ps_df
library(purrr)
library(dplyr)
library(tidyr)
set.seed(2022)
otutable <- ps_df %>%
dplyr::select(SampleID=sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
# dplyr::select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
otutable
ps_df %>%
dplyr::select(otu=taxon, taxonomy = taxon)
otutable
otutable <- ps_df %>%
dplyr::select(SampleID=sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
# dplyr::select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
taxonomy <- ps_df %>%
dplyr::select(otu=taxon, taxonomy = taxon) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
# dplyr::select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
shared <- read_csv("data/HypertensionProject.csv", show_col_types = F) %>%
dplyr::select(1, Prevotella:ncol(.)) %>%
transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
# select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
metabolites <- read_csv("data/HypertensionProject.csv", show_col_types = F) %>%
dplyr::select(c(1,5:18 )) %>%
transpose(keep.names = "metabopwy", make.names = "SampleID") %>%
# select(metabopwy, starts_with("ERR")) %>%
pivot_longer(-metabopwy, names_to="sample_id", values_to="value") %>%
relocate(sample_id)
taxonomy <- read_tsv("data/mo_demodata/baxter.cons.taxonomy", show_col_types = F) %>%
rename_all(tolower) %>%
select(otu, taxonomy) %>%
mutate(otu = tolower(otu),
taxonomy = str_replace_all(taxonomy, "\\(\\d+\\)", ""),
taxonomy = str_replace(taxonomy, ";unclassified", "_unclassified"),
taxonomy = str_replace_all(taxonomy, ";unclassified", ""),
taxonomy = str_replace_all(taxonomy, ";$", ""),
taxonomy = str_replace_all(taxonomy, ".*;", "")
)
shared
taxonomy
shared
otutable <- ps_df %>%
dplyr::select(SampleID=sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
# dplyr::select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
taxonomy <- ps_df %>%
dplyr::select(otu=taxon, taxonomy = taxon)
taxonomy <- ps_df %>%
dplyr::select(otu=taxon, taxonomy = taxon) %>%
mutate(taxonomy = str_replace_all(taxonomy, "\\(\\d+\\)", ""),
taxonomy = str_replace(taxonomy, ";unclassified", "_unclassified"),
taxonomy = str_replace_all(taxonomy, ";unclassified", ""),
taxonomy = str_replace_all(taxonomy, ";$", ""),
taxonomy = str_replace_all(taxonomy, ".*;", "")
)
taxonomy
ps_df
metadata
ps_df
ps_df %>%
dplyr::select(c(1, 4,9))
metadata <- ps_df %>%
dplyr::select(c(1, 4,9)) %>%
mutate(hyper = bmi == "overweight" | bmi == "obese",
control = bmi == "lean") %>%
rename(sample_id = SampleID)
metadata <- ps_df %>%
dplyr::select(c(1, 4,9)) %>%
mutate(hyper = bmi == "overweight" | bmi == "obese",
control = bmi == "lean")
metadata
composite <- inner_join(metadata, otutable, by="sample_id")
composite
ps_df %>%
dplyr::select(c(1, 4, 9))
ps_df %>%
dplyr::select(c(1, 4, 9)) %>%
mutate(hyper = bmi == "overweight" | bmi == "obese",
control = bmi == "lean")
metadata <- ps_df %>%
dplyr::select(c(1, 4, 9)) %>%
mutate(hyper = bmi == "overweight" | bmi == "obese",
control = bmi == "lean")
metadata
taxonomy
otutable <- ps_df %>%
dplyr::select(SampleID=sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
# dplyr::select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
otutable
ps_df %>%
dplyr::select(SampleID=sample_id, taxonomy = taxon, rel_abund)
ps_df %>%
dplyr::select(SampleID=sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID")
ps_df %>%
dplyr::select(SampleID=sample_id, taxonomy = taxon, rel_abund)
otutable <- ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "sample_id") %>%
# dplyr::select(taxonomy, starts_with("ERR")) %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
otutable
ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund)
ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "sample_id")
ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund)
s_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund)
ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund)
otutable <- ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund) %>%
relocate(sample_id)
otutable
taxonomy
otutable
otutable <- ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund) %>%
relocate(sample_id)
taxonomy <- ps_df %>%
dplyr::select(otu=taxon, taxonomy = taxon) %>%
mutate(taxonomy = str_replace_all(taxonomy, "\\(\\d+\\)", ""),
taxonomy = str_replace(taxonomy, ";unclassified", "_unclassified"),
taxonomy = str_replace_all(taxonomy, ";unclassified", ""),
taxonomy = str_replace_all(taxonomy, ";$", ""),
taxonomy = str_replace_all(taxonomy, ".*;", "")
)
metadata <- ps_df %>%
dplyr::select(c(1, 4, 9)) %>%
mutate(hyper = bmi == "overweight" | bmi == "obese",
control = bmi == "lean")
metadata
composite <- inner_join(metadata, otutable, by="sample_id")
composite
all_genera <- composite %>%
tidyr::nest(data = -taxonomy)
all_genera
composite
composite %>%
tidyr::nest(data = -taxonomy)
composite %>%
tidyr::nest(data = -taxonomy) %>%
mutate(test = purrr::map(.x=data, ~wilcox.test(rel_abund~sex, data=.x) %>% tidy))
composite %>%
tidyr::nest(data = -taxonomy) %>%
mutate(test = purrr::map(.x=data, ~wilcox.test(rel_abund~hyper, data=.x) %>% tidy))
composite
metadata <- ps_df %>%
dplyr::select(c(1, 4, 9)) %>%
mutate(hyper = bmi == "overweight",
control = bmi == "lean")
metadata
library(microbiome)
library(microViz)
load("../imap-data-preparation/data/phyloseq_raw_rel_psextra_df_objects.rda", verbose = TRUE)
ps_df
library(purrr)
library(dplyr)
library(tidyr)
set.seed(2022)
otutable <- ps_df %>%
dplyr::select(sample_id, taxonomy = taxon, rel_abund) %>%
relocate(sample_id)
taxonomy <- ps_df %>%
dplyr::select(otu=taxon, taxonomy = taxon) %>%
mutate(taxonomy = str_replace_all(taxonomy, "\\(\\d+\\)", ""),
taxonomy = str_replace(taxonomy, ";unclassified", "_unclassified"),
taxonomy = str_replace_all(taxonomy, ";unclassified", ""),
taxonomy = str_replace_all(taxonomy, ";$", ""),
taxonomy = str_replace_all(taxonomy, ".*;", "")
)
metadata <- ps_df %>%
dplyr::select(c(1, 4, 9)) %>%
mutate(hyper = bmi == "overweight",
control = bmi == "lean")
## Data joining
composite <- inner_join(metadata, otutable, by="sample_id")
all_genera <- composite %>%
tidyr::nest(data = -taxonomy) %>%
mutate(test = purrr::map(.x=data, ~wilcox.test(rel_abund~hyper, data=.x) %>% tidy)) %>%
tidyr::unnest(test) %>%
mutate(p.adjust = p.adjust(p.value, method="BH"))
composite %>%
tidyr::nest(data = -taxonomy)
composite %>%
mutate(test = purrr::map(.x=data, ~wilcox.test(rel_abund~hyper, data=.x) %>% tidy))
composite
ps_df %>%
dplyr::select(c(1, 4, 9)) %>%
mutate(hyper = bmi == "overweight",
control = bmi == "lean")
metadata <- ps_df %>%
dplyr::select(c(1, 4, 9)) %>%
mutate(hyper = bmi == "obese",
control = bmi == "lean")
metadata
otutable
metadata
composite <- inner_join(metadata, otutable, by="sample_id")
composite
colnames(composite)
df <- composite
wilcox.test(df$control, df$hyper, paired = TRUE)
# Assuming your data frame is named df
df <- composite
wilcox.test(df$rel_abund ~ df$control, paired = TRUE)
composite
metadata <- ps_df %>%
dplyr::select(c(1, 4, 9))
composite <- inner_join(metadata, otutable, by="sample_id")
colnames(composite)
composite
composite <- inner_join(metadata, otutable, by="sample_id") %>% distinct()
composite
df <- composite
wilcox.test(df$rel_abund ~ df$control, paired = TRUE)
# Assuming your data frame is named df
df <- composite
wilcox.test(df$rel_abund ~ df$nationality, paired = TRUE)
df$nationality
df$rel_abund
wilcox.test(df$rel_abund ~ df$nationality, paired = FALSE)
df <- composite %>%
wilcox.test(df$rel_abund ~ df$nationality, paired = FALSE)
composite <- inner_join(metadata, otutable, by="sample_id") %>% distinct()
colnames(composite)
# Assuming your data frame is named df
df <- composite
wilcox.test(df$rel_abund ~ df$nationality, paired = FALSE)
df <- composite
wilcox.test(df$rel_abund ~ df$nationality, paired = FALSE) %>%
mutate(p.adjust = p.adjust(p.value, method="BH"))
wilcox.test(df$rel_abund ~ df$nationality, paired = FALSE) %>% p.adjust(p.value, method="BH")
test_result <- wilcox.test(df$rel_abund ~ df$nationality, paired = FALSE)
# Extract the p-value from the test result
p_value <- test_result$p.value
# Print the p-value
print(p_value)
test result
test_result
test_result$statistic
test_result$data.name
omposite <- inner_join(metadata, otutable, by="sample_id") %>% distinct() %>%
tidyr::nest(data = -taxonomy)
composite
inner_join(metadata, otutable, by="sample_id") %>% distinct() %>%
tidyr::nest(data = -taxonomy
composite %>%
metadata <- ps_df %>%
dplyr::select(c(1, 4, 9)) %>%
mutate(hyper = bmi == "obese",
control = bmi == "lean")
## Data joining
composite <- inner_join(metadata, otutable, by="sample_id")
all_genera <- composite %>%
tidyr::nest(data = -taxonomy) %>%
mutate(test = purrr::map(.x=data, ~wilcox.test(rel_abund~hyper, data=.x) %>% tidy)) %>%
tidyr::unnest(test) %>%
mutate(p.adjust = p.adjust(p.value, method="BH"))
# Load necessary libraries with suppressed startup messages
library(tidyverse, suppressPackageStartupMessages())
library(broom)
library(ggtext)
library(data.table)
# Set seed for reproducibility
set.seed(2022)
# Read and process the OTU table data
otutable <- read_csv("data/HypertensionProject.csv", show_col_types = FALSE) %>%
dplyr::select(1, Prevotella:ncol(.)) %>%
data.table::transpose(keep.names = "taxonomy", make.names = "SampleID") %>%
pivot_longer(-taxonomy, names_to="sample_id", values_to="rel_abund") %>%
relocate(sample_id)
# Read and process the metabolites data
metabolites <- read_csv("data/HypertensionProjectMetabolites.csv", show_col_types = FALSE) %>%
dplyr::select(c(1,5:18)) %>%
data.table::transpose(keep.names = "metabopwy", make.names = "SampleID") %>%
pivot_longer(-metabopwy, names_to="sample_id", values_to="value") %>%
group_by(sample_id) %>%
mutate(rel_abund = value/sum(value)) %>%
ungroup() %>%
dplyr::select(-value) %>%
relocate(sample_id)
# Read and process the taxonomy data
taxonomy <- read_tsv("data/mo_demodata/baxter.cons.taxonomy", show_col_types = FALSE) %>%
rename_all(tolower) %>%
dplyr::select(otu, taxonomy) %>%
mutate(taxonomy = str_replace_all(taxonomy, "\\(\\d+\\)", ""),
taxonomy = str_replace(taxonomy, ";unclassified", "_unclassified"),
taxonomy = str_replace_all(taxonomy, ";unclassified", ""),
taxonomy = str_replace_all(taxonomy, ";$", ""),
taxonomy = str_replace_all(taxonomy, ".*;", ""))
# Read and process the metadata
metadata <- read_csv("data/HypertensionProject.csv", show_col_types = FALSE) %>%
dplyr::select(c(1:3)) %>%
mutate(hyper = Disease_State == "HTN" | Disease_State == "pHTN",
control = Disease_State == "healthy") %>%
rename(sample_id = SampleID)
## Data joining
# Join metadata with OTU table to create composite dataset
composite <- inner_join(metadata, otutable, by="sample_id")
# Join metadata with metabolites data to create composite metabolites dataset
metabo_composite <- inner_join(metadata, metabolites, by="sample_id")
# Save the processed data objects into an RDA file
save(otutable, metabolites, taxonomy, metadata, composite, metabo_composite, file = "data/composite_object.rda")
# Subset for machine learning analysis: Taxonomic genus features with disease states
ml_genus_dsestate <- composite %>%
select(sample_id, taxonomy, enttype = Enterotype, rel_abund, dsestate = Disease_State) %>%
pivot_wider(names_from=taxonomy, values_from = rel_abund) %>%
select(-sample_id) %>%
mutate(enttype = if_else(enttype == "Enterotype_1", "0", "1")) %>%
mutate(dsestate = if_else(dsestate == "pHTN" | dsestate == "HTN" , "0", "1")) %>%
select(-enttype) %>%
select(dsestate, everything())
# Subset for machine learning analysis: Taxonomic genus features with enterotypes
ml_genus_enttype <- composite %>%
select(sample_id, taxonomy, enttype = Enterotype, rel_abund, dsestate = Disease_State) %>%
pivot_wider(names_from=taxonomy, values_from = rel_abund) %>%
select(-sample_id) %>%
mutate(enttype = if_else(enttype == "Enterotype_1", "0", "1")) %>%
mutate(dsestate = if_else(dsestate == "pHTN" | dsestate == "HTN" , "0", "1")) %>%
select(-dsestate) %>%
select(enttype, everything())
# Subset for machine learning analysis: Metabolic pathway features with disease states
ml_pwy_dsestate <- metabo_composite %>%
select(sample_id, metabopwy, enttype = Enterotype, rel_abund, dsestate = Disease_State) %>%
pivot_wider(names_from=metabopwy, values_from = rel_abund) %>%
select(-sample_id) %>%
mutate(enttype = if_else(enttype == "Enterotype_1", "0", "1")) %>%
mutate(dsestate = if_else(dsestate == "pHTN" | dsestate == "HTN" , "0", "1")) %>%
select(-enttype) %>%
select(dsestate, everything())
# Subset for machine learning analysis: Metabolic pathway features with enterotypes
ml_pwy_enttype <- metabo_composite %>%
select(sample_id, metabopwy, enttype = Enterotype, rel_abund, dsestate = Disease_State) %>%
pivot_wider(names_from=metabopwy, values_from = rel_abund) %>%
select(-sample_id) %>%
mutate(enttype = if_else(enttype == "Enterotype_1", "0", "1")) %>%
mutate(dsestate = if_else(dsestate == "pHTN" | dsestate == "HTN" , "0", "1")) %>%
select(-dsestate) %>%
select(enttype, everything())
# Save the processed data objects into an RDA file
save(metabo_composite,
ml_genus_dsestate,
ml_genus_enttype,
ml_pwy_dsestate,
ml_pwy_enttype,
file = "data/composite_objects4ML.rda")
# Install and load required package
install.packages("DiagrammeR")
library(DiagrammeR)
